{# templates/music_library/index.html.twig #}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Biblioth√®que Musicale</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper/swiper-bundle.min.css" />

    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #111;
            color: #fff;
            overflow-x: hidden;
        }

        /* Navbar styles */
        .navbar.scrolled {
            background-color: #333;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }
        
        .navbar {
            padding: 1rem 0;
            position: fixed;
            width: 100%;
            top: 0;
            z-index: 999;
            background: transparent;
            transition: background-color 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
        }

        .navbar-nav {
            display: flex;
            gap: 1rem;  
            align-items: center;
        }

        .navbar-nav .nav-link {
            color: #fff;
            margin-right: 15px;
            position: relative;
            padding-bottom: 5px;
        }

        .navbar-nav .nav-link.active, 
        .navbar-nav .nav-link:hover {
            color: #f0ad4e;
        }

        .navbar-nav .nav-link::after {
            content: '';
            position: absolute;
            width: 0;
            height: 2px;
            background-color: #f0ad4e;
            bottom: 0;
            left: 50%;
            transition: all 0.3s ease;
        }

        .navbar-nav .nav-link.active::after, 
        .navbar-nav .nav-link:hover::after {
            width: 100%;
            left: 0;
        }

        .navbar-collapse {
            display: flex;
            justify-content: flex-end;
            align-items: center;
        }

        .navbar-nav.main-menu,
        .navbar-nav.auth-menu {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin: 0;
        }

        .navbar-nav.main-menu {
            margin-right: 2rem;
        }

        .navbar-nav .nav-link.active {
            color: #f0ad4e;
        }

        .search-section{
            padding: 10vh;
            text-align: center;
        }

        .search-filters {
            margin-top: 20px; 
            margin-bottom: 20px; 
        }

        .search-bar {
            width: 100%;
            max-width: 500px;
            margin: 0 auto;
            transition: box-shadow 0.3s ease, transform 0.3s ease;
        }

       .search-bar:focus { box-shadow: 0 4px 15px rgba(0,0,0,0.2); transform: scale(1.02); }
        .search-suggestions {
            position: absolute;
            left: 50%;
            transform: translateX(-50%);
            background: #222;
            border: 1px solid #333;
            border-radius: 5px;
            width: 100%;
            max-width: 500px;
            z-index: 1000;
            opacity: 0;
            pointer-events: none;
        }
        .search-suggestions.active { opacity: 1; pointer-events: auto; }
        .search-suggestion {
            padding: 10px;
            border-bottom: 1px solid #333;
            cursor: pointer;
            transition: background 0.3s ease;
        }
        .search-suggestion:last-child { border-bottom: none; }
        .search-suggestion:hover { background: #333; }

        .section-title { 
            font-size: 1.5rem; font-weight: bold; 
        }

        .filters select {
            max-width: 150px;
            margin-left: 10px;
            transition: transform 0.3s ease;
        }

        .filters select:hover {
            transform: scale(1.1);
        }

        .filters select:focus {
            outline: none;
            border-color: #007bff;
            box-shadow: 0 4px 8px rgba(0, 123, 255, 0.2);
        }

        .song-card, .artist-card, .album-card {
            width: 200px; 
            height: 200px;
            border-radius: 10px;
            overflow: hidden; 
            position: relative;
            color: white;
            display: flex;
            justify-content: center;
            align-items: flex-end;
            text-shadow: 0 1px 5px rgba(0, 0, 0, 0.7);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .song-card img, .artist-card img, .album-card img {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
            z-index: -1; 
        }

        .song-card:hover, .artist-card:hover, .album-card:hover {
            transform: scale(1.05);
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
            border-radius: 10px;
        }

        .song-card .card-body, .artist-card .card-body, .album-card .card-body {
            padding: 10px;
            background: rgba(0, 0, 0, 0.5); 
            width: 100%;
            text-align: center;
            font-size: 1rem;
        }

        .song-slider-container, .artist-slider-container, .album-slider-container {
            display: flex;
            align-items: center;
            position: relative;
            margin: 1vh 0 0 0; 
        }

        .txt {
            position: relative;
            text-decoration: none;
        }

        .txt::after {
            content: "";
            position: absolute;
            left: 0;
            bottom: 0px;
            width: 0;
            height: 2px;
            background-color: blue;
            transition: width 0.3s ease-in-out;
        }

        .txt:hover::after {
            width: 100%;
        }

        .swiper-container {
            position: relative;
            margin-bottom: 40px;
        }

        .swiper-wrapper {
            display: flex;
        }

        .swiper-slide {
            width: 200px; 
        }

        .scroll-arrow {
            cursor: pointer;
            font-size: 2rem;
            color: white;
            transition: color 0.3s ease;
        }

        .scroll-arrow:hover {
            color: #007bff;
        }

        .btn-link-custom {
            display: flex;
            font-weight: bold;
            text-transform: uppercase;
            padding: 4px 8px;
            border: 2px solid #007bff;
            color: #007bff;
            border-radius: 8px;
            text-decoration: none;
            margin: 0;
            position: relative;
            overflow: hidden;
            background-color: transparent;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .btn-link-custom::after {
            content: "";
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: #007bff;
            z-index: -1;
            transition: all 0.3s ease;
        }

        .btn-link-custom:hover {
            color: #fff;
            transform: scale(1.05);
        }

        .btn-link-custom:hover::after {
            left: 0;
        }

        .dropdown-menu {
            animation: fadeInDown 0.5s ease;
        }

        @keyframes fadeInDown {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .favorite-icon {
            position: absolute;
            top: 10px;
            right: 10px;
            cursor: pointer;
            z-index: 10;
            font-size: 1.5rem;
            transition: transform 0.3s ease;
        }

        .favorited {
            color: red !important;
        }

        @keyframes vibrate {
            0% { transform: translate(0); }
            20% { transform: translate(-2px, 2px); }
            40% { transform: translate(-2px, -2px); }
            60% { transform: translate(2px, 2px); }
            80% { transform: translate(2px, -2px); }
            100% { transform: translate(0); }
        }

        .vibrate {
            animation: vibrate 0.5s ease;
        }
        .swiper-button-next{
            right: var(--swiper-navigation-sides-offset, -70px);
        }

        .scroll-arrow.d-none {
            display: none;
        }

        footer {
            background-color: #222;
            color: #fff;
            padding: 20px 0;
            margin-top: 5vh;
            text-align: center;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark">
        <div class="container">
            <a class="navbar-brand" href="{{ path('music_library') }}">Music Library</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse justify-content-end" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link" href="{{ path('artist_page') }}">Artists</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{{ path('album_page') }}">Albums</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{{ path('song_page') }}">Songs</a>
                    </li>
                    {% if app.user %}
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button"
                            data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="bi bi-person"></i> {{ app.user.username }}
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="{{ path('profile') }}">Votre profil</a></li>
                                <li><a class="dropdown-item" href="{{ path('favoris_index') }}">Vos favoris</a></li>
                                <li><hr class="dropdown-divider"></li>
                               <li class="nav-item">
                                    <a href="{{ path('logout') }}" class="dropdown-item">Logout</a>

                                </li>

                            </ul>
                        </li>
                    {% else %}
                        <li class="nav-item"><a class="btn-link-custom" href="{{ path('register_form') }}">Register</a></li>
                        <li class="nav-item"><a class="btn-link-custom" href="{{ path('login_form') }}">Login</a></li>
                    {% endif %}
                </ul>
            </div>
        </div>
    </nav>

    <section id="search" class="search-section position-relative">
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <input type="text" class="form-control search-bar" placeholder="Rechercher..." id="home-search">
                    <div id="search-suggestions" class="search-suggestions"></div>
                </div>
            </div>
        </div>
    </section>

    <div class="container">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <div class="section-title">Musique</div>
            <a href="{{ path('song_page') }}" class="txt text-white">Voir tous</a>
        </div>
        <div class="swiper-container song-slider-container">
            <div class="swiper-wrapper">
                {% for item in limitedSongsData %}
                    <div class="swiper-slide">
                        <a href="{{ path('song_details', {
                            'artistId': item.artistId,
                            'albumIndex': item.albumIndex,
                            'songIndex': item.songIndex
                        }) }}" class="text-decoration-none song-card">
                            <div class="song-card text-center" style="position: relative;">
                                <div class="favorite-icon" data-type="song" data-entity-id="{{ item.song.id }}">
                                    {% if favoritedSongIds is defined and item.song.id in favoritedSongIds %}
                                        <i class="bi bi-heart-fill favorited"></i>
                                    {% else %}
                                        <i class="bi bi-heart"></i>
                                    {% endif %}
                                </div>
                                <img src="/media/{{ item.song.image }}" alt="{{ item.song.title }}">
                                <div class="card-body">{{ item.song.title }}</div>
                            </div>
                        </a>
                    </div>
                {% endfor %}
            </div>
            <div class="swiper-button-prev"></div>
            <div class="swiper-button-next"></div>
        </div>

        <div class="d-flex justify-content-between align-items-center mt-5 mb-4">
            <div class="section-title">Artistes</div>
            <a href="{{ path('artist_page') }}" class="txt text-white">Voir tous</a>
        </div>
        <div class="swiper-container artist-slider-container">
            <div class="swiper-wrapper">
                {% for artist in artists|slice(0,8) %}
                    <div class="swiper-slide">
                        <a href="{{ path('artist_details', {'id': artist.id}) }}" class="text-decoration-none artist-card">
                            <div class="song-card text-center" style="width: 200px; height: 200px; position: relative;">
                                <div class="favorite-icon" data-type="artist" data-entity-id="{{ artist.id }}">
                                    {% if favoritedArtistIds is defined and artist.id in favoritedArtistIds %}
                                        <i class="bi bi-heart-fill favorited"></i>
                                    {% else %}
                                        <i class="bi bi-heart"></i>
                                    {% endif %}
                                </div>
                                <img src="/media/{{ artist.image }}" alt="{{ artist.name }}" class="img-fluid w-100 h-100">
                                <div class="card-body">{{ artist.name }}</div>
                            </div>
                        </a>
                    </div>
                {% endfor %}
            </div>
            <div class="swiper-button-prev"></div>
            <div class="swiper-button-next"></div>
        </div>

        <div class="d-flex justify-content-between align-items-center mt-5 mb-4">
            <div class="section-title">Albums</div>
            <a href="{{ path('album_page') }}" class="txt text-white">Voir tous</a>
        </div>
        <div class="swiper-container album-slider-container">
            <div class="swiper-wrapper">
                {% for item in limitedAlbumsData %}
                    <div class="swiper-slide">
                        <a href="{{ path('albums_details', {
                            'artistId': item.artistId,
                            'albumIndex': item.albumIndex
                        }) }}" class="text-decoration-none album-card">
                            <div class="album-card text-center" style="position: relative;">
                                <div class="favorite-icon" data-type="album" data-entity-id="{{ item.album.id }}">
                                    {% if favoritedAlbumIds is defined and item.album.id in favoritedAlbumIds %}
                                        <i class="bi bi-heart-fill favorited"></i>
                                    {% else %}
                                        <i class="bi bi-heart"></i>
                                    {% endif %}
                                </div>
                                <img src="/media/{{ item.album.image }}" alt="{{ item.album.title }}">
                                <div class="card-body">{{ item.album.title }}</div>
                            </div>
                        </a>
                    </div>
                {% endfor %}
            </div>
            <div class="swiper-button-prev"></div>
            <div class="swiper-button-next"></div>
        </div>
    </div>

        <footer>
            &copy; 2024 Biblioth√®que Musicale | Tous droits r√©serv√©s.
        </footer>

        <script src="https://cdn.jsdelivr.net/npm/swiper/swiper-bundle.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.10.4/gsap.min.js"></script>
        <script>
            class HomeSearch {
                constructor() {
                    this.searchInput = document.getElementById('home-search');
                    this.suggestionsContainer = document.getElementById('search-suggestions');
                    this.initListeners();
                }

                initListeners() {
                    this.searchInput.addEventListener('input', (e) => {
                        const query = e.target.value.trim();
                        if (!query || query.length < 2) {
                            this.hideSuggestions();
                            return;
                        }
                        this.onSearch(query);
                    });

                    this.searchInput.addEventListener('blur', () => {
                        setTimeout(() => { this.hideSuggestions(); }, 150);
                    });

                    document.addEventListener('click', (e) => {
                        if (!this.suggestionsContainer.contains(e.target) && e.target !== this.searchInput) {
                            this.hideSuggestions();
                        }
                    });
                }

                async onSearch(query) {
                    this.showSuggestions();
                    try {
                    const response = await fetch(`/api/search?q=${encodeURIComponent(query)}`);
                    const suggestions = await response.json();
                    this.renderSuggestions(suggestions);
                    } catch (error) {
                    console.error('Erreur lors de la recherche live:', error);
                    this.hideSuggestions();
                    }
                }

                renderSuggestions(suggestions) {
                    suggestions = suggestions.slice(0, 5);

                    const grouped = {};
                    suggestions.forEach(suggestion => {
                    const key = suggestion.label.toLowerCase();
                    if (!grouped[key]) {
                        grouped[key] = [];
                    }
                    grouped[key].push(suggestion);
                    });

                    Object.keys(grouped).forEach(key => {
                    const group = grouped[key];
                    if (group.length > 1) {
                        const types = group.map(s => s.type);
                        const uniqueTypes = [...new Set(types)];
                        group.forEach(s => {
                        if (uniqueTypes.length > 1) {
                            s.label += ` (${s.type})`;
                        } else if (s.type === 'song' || s.type === 'album') {
                            if (s.artistName) {
                            s.label += ` (${s.artistName})`;
                            } else {
                            s.label += ` (${s.type})`;
                            }
                        }
                        });
                    }
                    });

                    const modifiedSuggestions = suggestions.map(suggestion => suggestion);

                    this.suggestionsContainer.innerHTML = modifiedSuggestions.map(item => {
                    return `<div class="search-suggestion" data-url="${item.url}">${item.label}</div>`;
                    }).join('');

                    this.suggestionsContainer.querySelectorAll('.search-suggestion').forEach(el => {
                    el.addEventListener('click', () => {
                        window.location.href = el.getAttribute('data-url');
                    });
                    el.addEventListener('mouseenter', () => {
                        gsap.to(el, { scale: 1.05, duration: 0.2 });
                    });
                    el.addEventListener('mouseleave', () => {
                        gsap.to(el, { scale: 1, duration: 0.2 });
                    });
                    });

                    gsap.fromTo(this.suggestionsContainer, { opacity: 0, y: -10 }, { opacity: 1, y: 0, duration: 0.3 });
                }

                showSuggestions() {
                    this.suggestionsContainer.classList.add('active');
                }

                hideSuggestions() {
                    this.suggestionsContainer.classList.remove('active');
                    this.suggestionsContainer.innerHTML = '';
                }
            }

            const homeSearch = new HomeSearch();

            document.addEventListener('DOMContentLoaded', () => {
                const navbar = document.querySelector('.navbar');
                window.addEventListener('scroll', () => {
                    navbar.classList.toggle('scrolled', window.scrollY > 50);
                });

                var songSwiper = new Swiper('.song-slider-container', {
                    slidesPerView: 'auto',
                    spaceBetween: 20,
                    navigation: {
                        nextEl: '.song-slider-container .swiper-button-next',
                        prevEl: '.song-slider-container .swiper-button-prev'
                    },
                    resistanceRatio: 0.85,
                    threshold: 20,
                    freeMode: false,
                    momentum: true,
                });
                
                var artistSwiper = new Swiper('.artist-slider-container', {
                    slidesPerView: 'auto',
                    spaceBetween: 20,
                    navigation: {
                        nextEl: '.artist-slider-container .swiper-button-next',
                        prevEl: '.artist-slider-container .swiper-button-prev'
                    },
                    resistanceRatio: 0.85,
                    threshold: 20,
                    freeMode: false,
                });
                
                var albumSwiper = new Swiper('.album-slider-container', {
                    slidesPerView: 'auto',
                    spaceBetween: 20,
                    navigation: {
                        nextEl: '.album-slider-container .swiper-button-next',
                        prevEl: '.album-slider-container .swiper-button-prev'
                    },
                    resistanceRatio: 0.85,
                    threshold: 20,
                    freeMode: false,
                });

                document.querySelectorAll('.favorite-icon').forEach(icon => {
                    icon.addEventListener('click', async function(e) {
                        e.preventDefault();
                        
                        if (!window.isAuthenticated || window.isAuthenticated === 'false') {
                            Swal.fire({
                                icon: 'warning',
                                title: 'Vous devez √™tre connect√© pour ajouter des √©l√©ments en favoris',
                                toast: true,
                                position: 'bottom-end',
                                showConfirmButton: false,
                                timer: 3000
                            });
                            setTimeout(() => {
                                window.location.href = "{{ path('login_form') }}";
                            }, 3000);
                            return;
                        }
                        
                        const type = this.getAttribute('data-type');
                        const entityId = this.getAttribute('data-entity-id');
                        
                        try {
                            const formData = new URLSearchParams();
                            formData.append('type', type);
                            formData.append('id', entityId);
                            
                            const response = await fetch("{{ path('favoris_toggle') }}", {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/x-www-form-urlencoded'
                                },
                                body: formData.toString()
                            });
                            
                            const result = await response.json();
                            const iconElem = this.querySelector('i');
                            
                            if (response.ok) {
                                if (result.favorited) {
                                    iconElem.classList.remove('bi-heart');
                                    iconElem.classList.add('bi-heart-fill', 'favorited');
                                    iconElem.style.color = 'red';
                                    
                                    gsap.fromTo(iconElem, 
                                        { scale: 1 }, 
                                        { scale: 1.5, duration: 0.2, ease: "power1.out", yoyo: true, repeat: 1 }
                                    );
                                } else {
                                    iconElem.classList.remove('bi-heart-fill', 'favorited');
                                    iconElem.classList.add('bi-heart');
                                    iconElem.style.color = 'white';
                                }
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Erreur',
                                    text: result.error || 'Une erreur est survenue',
                                    toast: true,
                                    position: 'bottom-end',
                                    showConfirmButton: false,
                                    timer: 3000
                                });
                            }
                        } catch (error) {
                            console.error('Erreur lors du toggle favoris:', error);
                            Swal.fire({
                                icon: 'error',
                                title: 'Erreur',
                                text: 'Une erreur est survenue',
                                toast: true,
                                position: 'bottom-end',
                                showConfirmButton: false,
                                timer: 3000
                            });
                        }
                    });
                });

                window.isAuthenticated = {{ app.user ? 'true' : 'false' }};
            });
        </script>

    </body>
</html>