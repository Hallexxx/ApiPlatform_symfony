{# templates/profile/profile.html.twig #}
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Votre Profil - Biblioth√®que Musicale</title>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
        <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
        <style>
            body {
                font-family: 'Poppins', sans-serif;
                background-color: #111;
                color: #fff;
            }

            .navbar.scrolled {
                background-color: #333;
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            }
            
            .navbar {
                padding: 1rem 0;
                position: fixed;
                width: 100%;
                top: 0;
                z-index: 999;
                background: transparent;
                transition: background-color 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
            }

            .navbar-nav {
                display: flex;
                gap: 1rem;  
                align-items: center;
            }

            .navbar-nav .nav-link {
                color: #fff;
                margin-right: 15px;
                position: relative;
                padding-bottom: 5px;
            }

            .navbar-nav .nav-link.active, 
            .navbar-nav .nav-link:hover {
                color: #f0ad4e;
            }

            .navbar-nav .nav-link::after {
                content: '';
                position: absolute;
                width: 0;
                height: 2px;
                background-color: #f0ad4e;
                bottom: 0;
                left: 50%;
                transition: all 0.3s ease;
            }

            .navbar-nav .nav-link.active::after, 
            .navbar-nav .nav-link:hover::after {
                width: 100%;
                left: 0;
            }

            .navbar-collapse {
                display: flex;
                justify-content: flex-end;
                align-items: center;
            }

            .navbar-nav.main-menu,
            .navbar-nav.auth-menu {
                display: flex;
                align-items: center;
                gap: 1rem;
                margin: 0;
            }

            .navbar-nav.main-menu {
                margin-right: 2rem;
            }

            .navbar-nav .nav-link.active {
                color: #f0ad4e;
            }
            
            #profile-container {
                margin-top: 120px;
            }

            .pro{
                display: flex;
                flex-direction: column;
                align-items: center;
            }

            .profile-section {
                padding: 30px 20px;
                border-bottom: 1px solid #555;
                margin-bottom: 40px;
                display: flex;
                align-items: center;
                justify-content: space-between;
                width: 80%;
            }

            .profile-info {
                display: flex;
                align-items: center;
            }

            .profile-picture {
                flex-shrink: 0;
            }

            .profile-picture img,
            .profile-picture i {
                width: 120px;
                height: 120px;
                border-radius: 50%;
                object-fit: cover;
            }

            .profile-details {
                flex-grow: 1;
                margin-left: 30px;
                text-align: left;
                font-size: 1.3rem;
            }

            .profile-details div {
                margin-bottom: 8px;
            }
            
            .edit-profile {
                color: #f0ad4e;
                font-size: 1.5rem;
                text-decoration: none;
                transition: transform 0.3s ease, color 0.3s ease;
            }

            .edit-profile:hover {
                transform: scale(1.1);
                cursor: pointer;
                color: #ffd700;
            }
            
            .section-title {
                font-size: 1.5rem;
                font-weight: bold;
                margin: 40px 0 20px;
                text-align: center;
            }

            .creations-cards {
                display: flex;
                flex-wrap: wrap;
                gap: 15px;
                margin: 1vh 0 0 0;
            }

            .card {
                width: 200px;
                height: 200px;
                border-radius: 10px;
                overflow: hidden;
                position: relative;
                background: #222;
                box-shadow: 0 4px 15px rgba(255,255,255,0.2);
                transition: transform 0.3s ease, box-shadow 0.3s ease;
            }

            .card:hover {
                transform: scale(1.05);
                cursor: pointer;
                box-shadow: 0 4px 15px rgba(0,0,0,0.2);
            }

            .card img {
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                object-fit: cover;
            }

            .card-title-container {
                position: absolute;
                bottom: 0;
                width: 100%;
                background: rgba(0,0,0,0.5);
                text-align: center;
                padding: 5px;
            }
            
            .card-title-container h5 {
                margin: 0;
                color: #fff;
                text-shadow: 0 1px 3px rgba(0,0,0,0.7);
                font-size: 1rem;
            }
            
            .card .edit-icon {
                position: absolute;
                top: 10px;
                right: 10px;
                cursor: pointer;
                font-size: 1.5rem;
                z-index: 10;
                color: #f0ad4e;
                transition: transform 0.3s ease;
            }

            .card .edit-icon:hover {
                transform: scale(1.1);
            }

            #file-name-display {
                margin-top: 5px;
                font-size: 0.9rem;
                color: #fff;
            }
            
            #choose-from-media {
                background-color: #f0ad4e;
                color: #fff;
                border: none;
                padding: 8px 12px;
                border-radius: 4px;
                cursor: pointer;
                margin-top: 10px;
            }

            footer {
                background-color: #222;
                color: #fff;
                padding: 20px 0;
                margin-top: 5vh;
                text-align: center;
            }

            .my-swal-popup {
                display: flex !important;
                flex-direction: column;
                align-items: center;
                justify-content: center;
            }

            .swal2-title{
                margin-top: 1vh;
            }

            .swal2-html-container{
                margin-top: 1vh;
                display: flex !important;
                flex-direction: column;
                align-items: center;
                justify-content: center;
            }

            .my-swal-popup input,
            .my-swal-popup textarea,
            .my-swal-popup button {
                width: 100%;
                max-width: 400px;
                margin: 5px 0;
            }
            
            .swal2-actions {
                display: flex !important;
                flex-direction: row;
                justify-content: center;
                gap: 10px;
                margin-top: 15px;
            }
            
            #file-name-display {
                margin-top: 5px;
                font-size: 0.9rem;
                color: #fff;
            }
            
            #choose-from-media {
                background-color: #f0ad4e;
                color: #fff;
                border: none;
                padding: 8px 12px;
                border-radius: 4px;
                cursor: pointer;
                margin-top: 10px;
                width: 100%;
                max-width: 400px;
            }
            
            .media-img.selected {
                border: 3px solid #f0ad4e;
                transform: scale(1.1);
                transition: transform 0.3s, border 0.3s;
            }
        </style>
    </head>
    <body>

        <nav class="navbar navbar-expand-lg navbar-dark">
            <div class="container">
                <a class="navbar-brand" href="{{ path('music_library') }}">Music Library</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse justify-content-end" id="navbarNav">
                    <ul class="navbar-nav">
                        <li class="nav-item">
                            <a class="nav-link" href="{{ path('artist_page') }}">Artists</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="{{ path('album_page') }}">Albums</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="{{ path('song_page') }}">Songs</a>
                        </li>
                        {% if app.user %}
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button"
                                data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="bi bi-person"></i> {{ app.user.username }}
                                </a>
                                <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                    <li><a class="dropdown-item" href="{{ path('profile') }}">Votre profil</a></li>
                                    <li><a class="dropdown-item" href="{{ path('favoris_index') }}">Vos favoris</a></li>
                                    <li><hr class="dropdown-divider"></li>
                                <li class="nav-item">
                                        <a href="{{ path('logout') }}" class="dropdown-item">Logout</a>

                                    </li>

                                </ul>
                            </li>
                        {% else %}
                            <li class="nav-item"><a class="btn-link-custom" href="{{ path('register_form') }}">Register</a></li>
                            <li class="nav-item"><a class="btn-link-custom" href="{{ path('login_form') }}">Login</a></li>
                        {% endif %}
                    </ul>
                </div>
            </div>
        </nav>

        <div class="container" id="profile-container">
            <div class="pro">
                <div class="profile-section">
                    <div class="profile-info d-flex align-items-center">
                        <div class="profile-picture">
                            {% if user.profilePicture %}
                            <img src="/media/{{ user.profilePicture }}" alt="Photo de profil">
                            {% else %}
                            <i class="bi bi-person-circle" style="font-size:120px; color:#777;"></i>
                            {% endif %}
                        </div>
                        <div class="profile-details">
                            <div><strong>Nom d'utilisateur :</strong> <span id="profile-username">{{ user.username }}</span></div>
                            <div><strong>Email :</strong> <span id="profile-email">{{ user.email }}</span></div>
                            <div><strong>Mot de passe :</strong> ****</div>
                        </div>
                    </div>
                    <div class="edit-profile" title="Modifier votre profil" id="edit-profile-btn">
                        <i class="bi bi-pencil-square"></i>
                    </div>
                </div>
            </div>

            <h2 class="section-title">Vos Cr√©ations</h2>

            {% if songs|length %}
                <div class="mb-4">
                    <h3>Musiques</h3>
                    <div class="creations-cards">
                        {% for song in songs %}
                            {% set albumIndex = 1 %}
                            {% for album in song.album.artist.albums %}
                                {% if album.id == song.album.id %}
                                    {% set albumIndex = loop.index %}
                                {% endif %}
                            {% endfor %}

                            {% set songIndex = 1 %}
                            {% for s in song.album.songs %}
                                {% if s.id == song.id %}
                                    {% set songIndex = loop.index %}
                                {% endif %}
                            {% endfor %}

                            <a href="{{ path('song_details', {
                                    'artistId': song.album.artist.id,
                                    'albumIndex': albumIndex,
                                    'songIndex': songIndex
                            }) }}">
                                <div class="card"
                                    data-type="song"
                                    data-id="{{ song.id }}"
                                    data-index="{{ songIndex }}"
                                    data-albumindex="{{ albumIndex }}"
                                    data-artistid="{{ song.album.artist.id }}"
                                    data-title="{{ song.title }}"
                                    data-image="{{ song.image }}"
                                    data-lyrics="{{ song.lyrics }}"
                                    data-date="{{ song.date|date('Y-m-d') }}">
                                    <img src="/media/{{ song.image }}" alt="{{ song.title }}">
                                    <div class="edit-icon" title="Modifier" data-type="song">
                                        <i class="bi bi-pencil-square"></i>
                                    </div>
                                    <div class="card-title-container">
                                        <h5 class="card-title">{{ song.title }}</h5>
                                    </div>
                                </div>
                            </a>
                        {% endfor %}
                    </div>
                </div>
            {% endif %}

            {% if albums|length %}
                <div class="mb-4">
                    <h3>Albums</h3>
                    <div class="creations-cards">
                        {% for album in albums %}
                            {% set albumIndex = 1 %}
                            {% for a in album.artist.albums %}
                                {% if a.id == album.id %}
                                    {% set albumIndex = loop.index %}
                                {% endif %}
                            {% endfor %}

                            <div class="card" data-type="album" data-id="{{ album.id }}" data-index="{{ albumIndex }}" data-artistid="{{ album.artist.id }}"
                                data-title="{{ album.title }}" data-image="{{ album.image }}">
                                <div class="edit-icon" title="Modifier" data-type="album">
                                    <i class="bi bi-pencil-square"></i>
                                </div>
                                <img src="/media/{{ album.image }}" alt="{{ album.title }}">
                                <div class="card-title-container">
                                    <h5 class="card-title">{{ album.title }}</h5>
                                </div>
                            </div>
                        {% endfor %}
                    </div>
                </div>
            {% endif %}

            {% if artists|length %}
                <div class="mb-4">
                    <h3>Artistes</h3>
                    <div class="creations-cards">
                        {% for artist in artists %}
                            <div class="card"  data-type="artist" -id="{{ artist.id }}" data-index="{{ artist.id }}" data-name="{{ artist.name }}"
                                data-image="{{ artist.image }}">
                                <div class="edit-icon" title="Modifier" data-type="artist">
                                    <i class="bi bi-pencil-square"></i>
                                </div>
                                <img src="/media/{{ artist.image }}" alt="{{ artist.name }}">
                                <div class="card-title-container">
                                    <h5 class="card-title">{{ artist.name }}</h5>
                                </div>
                            </div>
                        {% endfor %}
                    </div>
                </div>
            {% endif %}
        </div>

        <footer>
            &copy; 2024 Biblioth√®que Musicale | Tous droits r√©serv√©s.
        </footer>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.10.4/gsap.min.js"></script>
        <script>
            document.getElementById('edit-profile-btn').addEventListener('click', function() {
                Swal.fire({
                    title: 'Modifier votre profil',
                    html: `
                        <input type="text" id="swal-username" class="swal2-input" placeholder="Nom d'utilisateur" value="{{ user.username }}">
                        <input type="email" id="swal-email" class="swal2-input" placeholder="Email" value="{{ user.email }}">
                    `,
                    focusConfirm: false,
                    showCancelButton: true,
                    confirmButtonText: 'Enregistrer',
                    preConfirm: () => {
                        return {
                            username: document.getElementById('swal-username').value,
                            email: document.getElementById('swal-email').value
                        }
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        const data = result.value;
                        fetch("{{ path('profile_update') }}", {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/x-www-form-urlencoded'
                            },
                            body: new URLSearchParams(data).toString()
                        })
                        .then(response => response.json())
                        .then(json => {
                            if (json.success) {
                                Swal.fire('Profil mis √† jour', '', 'success');
                                document.getElementById('profile-username').textContent = json.username;
                                document.getElementById('profile-email').textContent = json.email;
                            } else {
                                Swal.fire('Erreur', json.error || 'Une erreur est survenue', 'error');
                            }
                        })
                        .catch(err => {
                            Swal.fire('Erreur', 'Une erreur est survenue', 'error');
                        });
                    }
                });
            });
            function loadMediaLibraryInPlace(callback) {
                fetch('/media-list')
                .then(response => {
                    if (!response.ok) {
                        throw new Error("HTTP error " + response.status);
                    }
                    return response.json();
                })
                .then(images => {
                    const container = document.getElementById('media-library-container');
                    let mediaHtml = '<div style="display: flex; flex-wrap: wrap; gap: 10px; justify-content: center;">';
                    images.forEach(img => {
                        mediaHtml += `<img src="/media/${img}" alt="${img}" class="media-img" style="width: 100px; height: 100px; object-fit: cover; cursor: pointer;">`;
                    });
                    mediaHtml += '</div>';
                    mediaHtml += `
                    <div style="display: flex; justify-content: center; gap: 10px; margin-top: 10px;">
                        <button type="button" id="media-valider" class="btn btn-success" style="max-width: 150px;">Valider</button>
                        <button type="button" id="media-annuler" class="btn btn-secondary" style="max-width: 150px;">Annuler</button>
                    </div>
                    `;
                    container.innerHTML = mediaHtml;
                    container.style.display = 'block';
                    let selectedUrl = null;
                    container.querySelectorAll('.media-img').forEach(img => {
                        img.addEventListener('click', function() {
                            container.querySelectorAll('.media-img').forEach(i => i.classList.remove('selected'));
                            this.classList.add('selected');
                            selectedUrl = this.getAttribute('src').split('/media/')[1];
                        });
                    });
                    document.getElementById('media-valider').addEventListener('click', () => {
                        container.style.display = 'none';
                        callback(selectedUrl);
                    });
                    document.getElementById('media-annuler').addEventListener('click', () => {
                        container.style.display = 'none';
                    });
                })
                .catch(err => {
                    console.error(err);
                    Swal.fire('Erreur', 'Impossible de charger la m√©diath√®que', 'error');
                });
            }

            document.querySelectorAll('.card .edit-icon').forEach(icon => {
                icon.addEventListener('click', function(e) {
                    e.preventDefault(); 
                    e.stopPropagation(); 
                    const card = this.closest('.card');
                    const type = card.getAttribute('data-type');
                    const id = card.getAttribute('data-id');
                    let htmlContent = '';
                    let endpoint = '';

                    if (type === 'song') {
                        htmlContent = `
                        <input type="text" id="swal-title" class="swal2-input" placeholder="Titre" value="${card.getAttribute('data-title') || ''}">
                        <input type="file" id="swal-image" class="swal2-input">
                        <div id="file-name-display">Aucun fichier choisi</div>
                        <button type="button" id="choose-from-media" class="btn btn-warning">Choisir depuis la m√©diath√®que</button>
                        <div id="media-library-container"></div>
                        <textarea id="swal-lyrics" class="swal2-textarea" placeholder="Paroles">${card.getAttribute('data-lyrics') || ''}</textarea>
                        <input type="date" id="swal-date" class="swal2-input" value="${card.getAttribute('data-date') || ''}">
                        `;
                        endpoint = "{{ path('profile_update_song', {'id': 'SOME_ID'}) }}".replace('SOME_ID', id);
                    } else if (type === 'album') {
                        htmlContent = `
                        <input type="text" id="swal-title" class="swal2-input" placeholder="Titre" value="${card.getAttribute('data-title') || ''}">
                        <input type="file" id="swal-image" class="swal2-input">
                        <div id="file-name-display">Aucun fichier choisi</div>
                        <button type="button" id="choose-from-media" class="btn btn-warning">Choisir depuis la m√©diath√®que</button>
                        <div id="media-library-container"></div>
                        `;
                        endpoint = "{{ path('profile_update_album', {'id': 'SOME_ID'}) }}".replace('SOME_ID', id);
                    } else if (type === 'artist') {
                        htmlContent = `
                        <input type="text" id="swal-name" class="swal2-input" placeholder="Nom" value="${card.getAttribute('data-name') || ''}">
                        <input type="file" id="swal-image" class="swal2-input">
                        <div id="file-name-display">Aucun fichier choisi</div>
                        <button type="button" id="choose-from-media" class="btn btn-warning">Choisir depuis la m√©diath√®que</button>
                        <div id="media-library-container"></div>
                        `;
                        endpoint = "{{ path('profile_update_artist', {'id': 'SOME_ID'}) }}".replace('SOME_ID', id);
                    }

                    Swal.fire({
                        title: 'Modifier ' + type,
                        html: htmlContent,
                        width: '80%',
                        customClass: { popup: 'swal2-popup my-swal-popup' },
                        focusConfirm: false,
                        showCancelButton: true,
                        confirmButtonText: 'Enregistrer',
                        didOpen: () => {
                            const fileInput = document.getElementById('swal-image');
                            const fileNameDisplay = document.getElementById('file-name-display');
                            fileInput.addEventListener('change', () => {
                                if (fileInput.files.length > 0) {
                                    fileNameDisplay.textContent = fileInput.files[0].name;
                                } else {
                                    fileNameDisplay.textContent = "Aucun fichier choisi";
                                }
                            });
                            document.getElementById('choose-from-media').addEventListener('click', () => {
                                loadMediaLibraryInPlace((selectedUrl) => {
                                    if (selectedUrl) {
                                        fileNameDisplay.textContent = selectedUrl;
                                    }
                                });
                            });
                        },
                        preConfirm: () => {
                            const formData = new FormData();
                            if (type === 'song') {
                                formData.append('title', document.getElementById('swal-title').value);
                                formData.append('lyrics', document.getElementById('swal-lyrics').value);
                                formData.append('date', document.getElementById('swal-date').value);
                            } else if (type === 'album') {
                                formData.append('title', document.getElementById('swal-title').value);
                            } else if (type === 'artist') {
                                formData.append('name', document.getElementById('swal-name').value);
                            }
                            const fileInput = document.getElementById('swal-image');
                            if (fileInput.files.length > 0) {
                                formData.append('image', fileInput.files[0]);
                            } else {
                                const selectedUrl = document.getElementById('file-name-display').textContent;
                                if (selectedUrl !== "Aucun fichier choisi") {
                                    formData.append('image', selectedUrl);
                                }
                            }
                            return formData;
                        }
                    }).then((result) => {
                        if (result.isConfirmed) {
                            const formData = result.value;
                            fetch(endpoint, {
                                method: 'POST',
                                body: formData
                            })
                            .then(response => response.json())
                            .then(json => {
                                if (json.success) {
                                    Swal.fire('Mis √† jour', '', 'success').then(() => {
                                        location.reload();
                                    });
                                } else {
                                    Swal.fire('Erreur', json.error || 'Une erreur est survenue', 'error');
                                }
                            })
                            .catch(err => {
                                Swal.fire('Erreur', 'Une erreur est survenue', 'error');
                            });
                        }
                    });
                });
            });

            document.querySelectorAll('.card').forEach(card => {
                card.addEventListener('click', function(e) {
                    // Si le clic provient d'un √©l√©ment (comme l'edit-icon) qui ne doit pas d√©clencher la redirection, on sort.
                    if (e.target.closest('.edit-icon')) return;

                    const type = this.dataset.type;
                    const index = this.dataset.index; // Cet index correspondra √† celui attendu dans l'URL

                    if (type === 'album') {
                        // Pour l'album, on doit aussi disposer de l'id de l'artiste associ√© (data-artistid)
                        const artistId = this.dataset.artistid;
                        window.location.href = `/artists/${artistId}/albums/${index}`;
                    } else if (type === 'song') {
                        // Pour la chanson, on attend √©galement les infos sur l'album et l'artiste.
                        const artistId = this.dataset.artistid;
                        const albumIndex = this.dataset.albumindex;
                        window.location.href = `/artists/${artistId}/albums/${albumIndex}/songs/${index}`;
                    } else if (type === 'artist') {
                        // Pour l'artiste, on redirige vers la page de d√©tails de l'artiste.
                        window.location.href = `/artists/${index}`;
                    }
                });
            });
        </script>
    </body>
</html>
