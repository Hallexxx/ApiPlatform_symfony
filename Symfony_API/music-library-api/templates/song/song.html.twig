<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Bibliothèque Musicale</title>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
        <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
        <style>
            body {
                font-family: 'Poppins', sans-serif;
                background-color: #111;
            }

            .navbar.scrolled {
                background-color: #333;
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            }
            .navbar {
                padding: 1rem 0;
                position: fixed;
                width: 100%;
                top: 0;
                z-index: 999;
                background: transparent;
                transition: background-color 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
            }

            .navbar-nav {
                margin: 0 auto;
            }

            .navbar-nav .nav-link {
                color: #fff;
                margin-right: 15px;
                position: relative;
                padding-bottom: 5px;
            }

            .navbar-nav .nav-link.active, 
            .navbar-nav .nav-link:hover {
                color: #f0ad4e;
            }

            .navbar-nav .nav-link::after {
                content: '';
                position: absolute;
                width: 0;
                height: 2px;
                background-color: #f0ad4e;
                bottom: 0;
                left: 50%;
                transition: all 0.3s ease;
            }

            .navbar-nav .nav-link.active::after, 
            .navbar-nav .nav-link:hover::after {
                width: 100%;
                left: 0;
            }

            .home-section {
                margin-top: 15vh;
                display: flex;
                align-items: center;
                justify-content: center;
            }

            .navbar-nav .nav-link.active {
                color: #f0ad4e;
            }
            .search-bar {
                margin-bottom: 30px;
            }
           
           .filters {
                display: flex;
                gap: 15px;
                justify-content: flex-end;
            }
            .song-grid {
                display: flex;
                flex-wrap: wrap;
                justify-content: center;
                gap: 20px;
            }

            .artist-grid {
                display: flex;
                flex-wrap: wrap;
                justify-content: center;
                gap: 20px;
            }

            .card {
                width: 250px;
                border-radius: 15px;
                overflow: hidden;
                border: none;
                box-shadow: 0 4px 15px rgba(255, 255, 255, 0.2);
                transition: transform 0.3s ease, box-shadow 0.3s ease;
            }

            .card:hover {
                transform: translateY(-10px);
                box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.15);
            }

            .card img {
                height: 200px;
                object-fit: cover;
            }

            .card-body {
                background-color: rgb(0 0 0 / 86%); 
                color: #fff; 
                padding: 15px;
                text-align: center;
                text-shadow: 0 1px 5px rgba(0, 0, 0, 0.7);
            }

            @media (max-width: 768px) {
                .filters {
                    flex-direction: column;
                    align-items: flex-start;
                }
            }

            footer {
                background-color: #222;
                color: #fff;
                padding: 20px 0;
                margin-top: 5vh;
                text-align: center;
            }
        </style>
    </head>
    <body>
        <nav class="navbar navbar-expand-lg navbar-dark">
            <div class="container">
                <a class="navbar-brand" href="{{ path('music_library') }}">Music Library</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav mx-auto"> 
                        <li class="nav-item"><a class="nav-link" href="{{ path('artist_page') }}">Artists</a></li>
                        <li class="nav-item"><a class="nav-link" href="{{ path('album_page') }}">Albums</a></li>
                        <li class="nav-item"><a class="nav-link" href="{{ path('song_page') }}">Songs</a></li>
                    </ul>
                </div>
            </div>
        </nav>

        <section id="home" class="home-section d-flex align-items-center">
            <div class="container">
            {% set uniqueStyles = [] %}
            {% for artist in artists %}
                {% if artist.style not in uniqueStyles %}
                    {% set uniqueStyles = uniqueStyles|merge([artist.style]) %}
                {% endif %}
            {% endfor %}

            <div class="row search-bar">
                <div class="col-md-6">
                <input type="text" class="form-control" placeholder="Rechercher une chanson..." id="song-search">
                </div>
                <div class="col-md-6 filters">
                <select class="form-select me-2" id="style-filter">
                    <option value="">Filtrer par style</option>
                    {% for style in uniqueStyles %}
                    <option value="{{ style }}">{{ style|capitalize }}</option>
                    {% endfor %}
                </select>
                <select class="form-select me-2" id="artist-filter">
                    <option value="">Filtrer par artiste</option>
                    {% for artist in artists %}
                    <option value="{{ artist.id }}">{{ artist.name }}</option>
                    {% endfor %}
                </select>
                <select class="form-select" id="album-filter" style="display:none;">
                    <option value="">Filtrer par album</option>
                    {# Ce select sera rempli dynamiquement quand un artiste est sélectionné #}
                </select>
                </div>
            </div>

            <div class="song-grid" id="song-grid">
                {# Affichage initial (exemple issu de votre BDD) #}
                {% for artist in artists %}
                {% for album in artist.albums %}
                    {% set albumIndex = loop.index %}
                    {% for song in album.songs %}
                    {% set songIndex = loop.index %}
                    <div class="card">
                        <img src="/media/{{ song.image }}" class="card-img-top" alt="{{ song.title }}">
                        <div class="card-body">
                        <h5 class="card-title">{{ song.title }}</h5>
                        <a href="{{ path('song_details', {
                            'artistId': artist.id,
                            'albumIndex': albumIndex,
                            'songIndex': songIndex
                        }) }}" class="btn btn-primary btn-sm">Voir plus de détails</a>
                        </div>
                    </div>
                    {% endfor %}
                {% endfor %}
                {% endfor %}
            </div>
            </div>
        </section>

        <footer>
            &copy; 2024 Bibliothèque Musicale | Tous droits réservés.
        </footer>

        <script>
            const artistsData = {{ artists|json_encode|raw }};

            document.getElementById('song-search').addEventListener('input', updateSongs);
            document.getElementById('style-filter').addEventListener('change', updateSongs);
            document.getElementById('artist-filter').addEventListener('change', function() {
            updateAlbumSelect();
            updateSongs();
            });
            document.getElementById('album-filter').addEventListener('change', updateSongs);

            function updateAlbumSelect() {
            const artistSelect = document.getElementById('artist-filter');
            const albumSelect = document.getElementById('album-filter');
            const artistId = artistSelect.value;
            albumSelect.innerHTML = '<option value="">Filtrer par album</option>'; 
            if (artistId) {
                const selectedArtist = artistsData.find(artist => artist.id == artistId);
                if (selectedArtist && selectedArtist.albums) {
                selectedArtist.albums.forEach(album => {
                    albumSelect.innerHTML += `<option value="${album.id}">${album.title}</option>`;
                });
                }
                albumSelect.style.display = 'block';
            } else {
                albumSelect.style.display = 'none';
            }
            }

            async function updateSongs() {
                const searchText = document.getElementById('song-search').value;
                const styleFilter = document.getElementById('style-filter').value;
                const artistFilter = document.getElementById('artist-filter').value;
                const albumFilter = document.getElementById('album-filter').value;

                const params = new URLSearchParams();
                if (searchText) params.append('title', searchText);
                if (styleFilter) params.append('style', styleFilter);
                if (artistFilter) params.append('artist', artistFilter);
                if (albumFilter) params.append('album', albumFilter);

                try {
                    const response = await fetch(`/api/songs?${params.toString()}`, {
                        headers: { 'Accept': 'application/ld+json' }
                    });
                    const data = await response.json();
                    const songs = data.member || data;
                    if (!Array.isArray(songs)) {
                    console.error("La structure des données n'est pas conforme :", data);
                    return;
                    }
                    const grid = document.getElementById('song-grid');
                    grid.innerHTML = '';
                    songs.forEach(song => {
                        const albumTitle = (song.album && song.album.title) ? song.album.title : 'Album inconnu';
                        const artistName = (song.album && song.album.artist && song.album.artist.name) ? song.album.artist.name : 'Artiste inconnu';
                        const card = `
                            <div class="card">
                            <img src="/media/${song.image}" class="card-img-top" alt="${song.title}">
                            <div class="card-body">
                                <h5 class="card-title">${song.title}</h5>
                                <p class="card-text">${albumTitle} - ${artistName}</p>
                                <a href="/songs/${song.id}" class="btn btn-primary btn-sm">Détails</a>
                            </div>
                            </div>
                        `;
                        grid.innerHTML += card;
                    });
                } catch (error) {
                    console.error("Erreur lors de la mise à jour des chansons :", error);
                }
            }
        </script>
    </body>
</html>
