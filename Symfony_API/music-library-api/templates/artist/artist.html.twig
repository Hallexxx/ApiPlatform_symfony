<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Bibliothèque Musicale - Artistes</title>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
        <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
        <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
        <style>
            body {
                font-family: 'Poppins', sans-serif;
                background-color: #111;
            }
            .navbar.scrolled {
                background-color: #333;
                box-shadow: 0 4px 8px rgba(0,0,0,0.2);
            }
            .navbar {
                padding: 1rem 0;
                position: fixed;
                width: 100%;
                top: 0;
                z-index: 999;
                background: transparent;
                transition: background-color 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
            }
            .navbar-nav {
                margin: 0 auto;
            }
            .navbar-nav .nav-link {
                color: #fff;
                margin-right: 15px;
                position: relative;
                padding-bottom: 5px;
            }
            .navbar-nav .nav-link.active,
            .navbar-nav .nav-link:hover {
                color: #f0ad4e;
            }
            .navbar-nav .nav-link::after {
                content: '';
                position: absolute;
                width: 0;
                height: 2px;
                background-color: #f0ad4e;
                bottom: 0;
                left: 50%;
                transition: all 0.3s ease;
            }
            .navbar-nav .nav-link.active::after,
            .navbar-nav .nav-link:hover::after {
                width: 100%;
                left: 0;
            }
            .home-section {
                margin-top: 15vh;
                display: flex;
                align-items: center;
                justify-content: center;
            }
            .search-bar {
                margin-bottom: 30px;
            }
            .filters {
                display: flex;
                gap: 15px;
                justify-content: center;
                flex-wrap: wrap;
            }
            .artist-grid {
                display: flex;
                flex-wrap: wrap;
                justify-content: center;
                gap: 20px;
            }
            .card {
                width: 250px;
                border-radius: 15px;
                overflow: hidden;
                border: none;
                box-shadow: 0 4px 15px rgba(255,255,255,0.2);
                transition: transform 0.3s ease, box-shadow 0.3s ease;
                position: relative;
            }
            .card:hover {
                transform: translateY(-10px);
                box-shadow: 0px 10px 20px rgba(0,0,0,0.15);
            }
            .card img {
                height: 200px;
                object-fit: cover;
            }
            .card-body {
                background-color: rgb(0 0 0 / 86%);
                color: #fff;
                padding: 15px;
                text-align: center;
                text-shadow: 0 1px 5px rgba(0,0,0,0.7);
            }
            .favorite-icon {
                position: absolute;
                top: 10px;
                right: 10px;
                cursor: pointer;
                z-index: 10;
                color: white;
                text-shadow: 0 1px 5px rgba(0, 0, 0, 0.7);
                font-size: 1.5rem;
                transition: transform 0.3s ease;
            }
            .favorited {
                color: red !important;
            }
            footer {
                background-color: #222;
                color: #fff;
                padding: 20px 0;
                margin-top: 5vh;
                text-align: center;
            }
        </style>
    </head>
    <body>
        <nav class="navbar navbar-expand-lg navbar-dark">
            <div class="container">
                <a class="navbar-brand" href="{{ path('music_library') }}">Music Library</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse justify-content-end" id="navbarNav">
                    <ul class="navbar-nav">
                        <li class="nav-item">
                            <a class="nav-link" href="{{ path('artist_page') }}">Artists</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="{{ path('album_page') }}">Albums</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="{{ path('song_page') }}">Songs</a>
                        </li>
                        {% if app.user %}
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button"
                                data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="bi bi-person"></i> {{ app.user.username }}
                                </a>
                                <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                    <li><a class="dropdown-item" href="{{ path('profile') }}">Votre profil</a></li>
                                    <li><a class="dropdown-item" href="{{ path('favoris_index') }}">Vos favoris</a></li>
                                    <li><hr class="dropdown-divider"></li>
                                <li class="nav-item">
                                        <a href="{{ path('logout') }}" class="dropdown-item">Logout</a>

                                    </li>

                                </ul>
                            </li>
                        {% else %}
                            <li class="nav-item"><a class="btn-link-custom" href="{{ path('register_form') }}">Register</a></li>
                            <li class="nav-item"><a class="btn-link-custom" href="{{ path('login_form') }}">Login</a></li>
                        {% endif %}
                    </ul>
                </div>
            </div>
        </nav>

        <section id="home" class="home-section">
            <div class="container">
                <div class="row search-bar">
                    <div class="col-12 col-md-6 mb-2 mb-md-0">
                        <input type="text" id="artist-search" class="form-control" placeholder="Rechercher un artiste...">
                    </div>
                    <div class="col-12 col-md-6">
                        <div class="d-flex flex-column flex-md-row gap-3">
                            <select id="style-filter" class="form-select">
                                <option value="">Filtrer par style</option>
                                {% for style in distinctStyles %}
                                    <option value="{{ style }}">{{ style }}</option>
                                {% endfor %}
                            </select>
                            <select id="nationality-filter" class="form-select">
                                <option value="">Filtrer par nationalité</option>
                                {% for nat in distinctNationalities %}
                                    <option value="{{ nat }}">{{ nat }}</option>
                                {% endfor %}
                            </select>
                        </div>
                    </div>
                </div>

                <div class="artist-grid" id="artist-grid">
                    {% for artist in artists %}
                        <div class="card"
                            data-name="{{ artist.name|lower }}"
                            data-style="{{ artist.style }}"
                            data-nationality="{{ artist.nationality }}">
                            <div class="favorite-icon" data-type="artist" data-entity-id="{{ artist.id }}">
                                {% if favoritedArtistIds is defined and artist.id in favoritedArtistIds %}
                                    <i class="bi bi-heart-fill favorited"></i>
                                {% else %}
                                    <i class="bi bi-heart"></i>
                                {% endif %}
                            </div>
                            <img src="/media/{{ artist.image }}" class="card-img-top" alt="{{ artist.name }}">
                            <div class="card-body">
                                <h5 class="card-title">{{ artist.name }}</h5>
                                <p class="card-text">{{ artist.style }} - {{ artist.nationality }}</p>
                                <a href="{{ path('artist_details', { id: artist.id }) }}" class="btn btn-primary btn-sm">
                                    Voir plus de détails
                                </a>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>
        </section>

        <footer>
            &copy; 2024 Bibliothèque Musicale | Tous droits réservés.
        </footer>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.4/gsap.min.js"></script>
        <script>
            class ArtistFilter {
                constructor() {
                    this.searchInput = document.getElementById('artist-search');
                    this.styleFilter = document.getElementById('style-filter');
                    this.nationalityFilter = document.getElementById('nationality-filter');
                    this.artistGrid = document.getElementById('artist-grid');
                    this.initListeners();
                    this.animateElements();
                }

                initListeners() {
                    this.searchInput.addEventListener('input', () => this.filterArtists());
                    this.styleFilter.addEventListener('change', () => this.filterArtists());
                    this.nationalityFilter.addEventListener('change', () => this.filterArtists());

                    [this.searchInput, this.styleFilter, this.nationalityFilter].forEach(input => {
                        input.addEventListener('focus', () => gsap.to(input, { scale: 1.05, duration: 0.2 }));
                        input.addEventListener('blur', () => gsap.to(input, { scale: 1, duration: 0.2 }));
                    });
                }

                animateElements() {
                    gsap.from("#artist-search", { duration: 0.5, y: -20, opacity: 0, ease: "power1.out" });
                    gsap.from("#style-filter", { duration: 0.5, y: -20, opacity: 0, ease: "power1.out", delay: 0.1 });
                    gsap.from("#nationality-filter", { duration: 0.5, y: -20, opacity: 0, ease: "power1.out", delay: 0.2 });
                }

                filterArtists() {
                    const searchText = this.searchInput.value.toLowerCase();
                    const selectedStyle = this.styleFilter.value;
                    const selectedNationality = this.nationalityFilter.value;

                    const cards = this.artistGrid.querySelectorAll('.card');
                    cards.forEach(card => {
                        const name = card.getAttribute('data-name');
                        const cardStyle = card.getAttribute('data-style');
                        const cardNationality = card.getAttribute('data-nationality');
                        let visible = true;

                        if (searchText && !name.includes(searchText)) {
                            visible = false;
                        }
                        if (selectedStyle && cardStyle !== selectedStyle) {
                            visible = false;
                        }
                        if (selectedNationality && cardNationality !== selectedNationality) {
                            visible = false;
                        }
                        card.style.display = visible ? 'block' : 'none';
                    });
                }
            }

            const artistFilter = new ArtistFilter();
            window.isAuthenticated = {{ app.user ? 'true' : 'false' }};
            document.addEventListener('DOMContentLoaded', () => {
                document.querySelectorAll('.favorite-icon').forEach(icon => {
                    icon.addEventListener('click', async function(e) {
                        e.preventDefault();
                        if (!window.isAuthenticated || window.isAuthenticated === 'false') {
                            Swal.fire({
                                icon: 'warning',
                                title: 'Vous devez être connecté pour ajouter aux favoris',
                                toast: true,
                                position: 'bottom-end',
                                showConfirmButton: false,
                                timer: 3000
                            });
                            setTimeout(() => {
                                window.location.href = "{{ path('login_form') }}";
                            }, 3000);
                            return;
                        }
                        const type = this.getAttribute('data-type'); 
                        const entityId = this.getAttribute('data-entity-id');
                        try {
                            const formData = new URLSearchParams();
                            formData.append('type', type);
                            formData.append('id', entityId);
                            const response = await fetch("{{ path('favoris_toggle') }}", {
                                method: 'POST',
                                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                                body: formData.toString()
                            });
                            const result = await response.json();
                            const iconElem = this.querySelector('i');
                            if (response.ok) {
                                if (result.favorited) {
                                    iconElem.classList.remove('bi-heart');
                                    iconElem.classList.add('bi-heart-fill', 'favorited');
                                    gsap.fromTo(iconElem, { scale: 1 }, { scale: 1.5, duration: 0.2, ease: "power1.out", yoyo: true, repeat: 1 });
                                } else {
                                    iconElem.classList.remove('bi-heart-fill', 'favorited');
                                    iconElem.classList.add('bi-heart');
                                }
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Erreur',
                                    text: result.error || 'Une erreur est survenue',
                                    toast: true,
                                    position: 'bottom-end',
                                    showConfirmButton: false,
                                    timer: 3000
                                });
                            }
                        } catch (error) {
                            console.error('Erreur lors du toggle favoris:', error);
                            Swal.fire({
                                icon: 'error',
                                title: 'Erreur',
                                text: 'Une erreur est survenue',
                                toast: true,
                                position: 'bottom-end',
                                showConfirmButton: false,
                                timer: 3000
                            });
                        }
                    });
                });
            });
        </script>
    </body>
</html>
